#!/bin/sh

PROGNAME=$0
REALNAME=$(readlink -f "$0")

REALNAME_BASE=$(basename "$REALNAME")
REALNAME_DIR=$(dirname "$REALNAME")

TARGET_FUNDAMENTAL_ASFLAGS=''
TARGET_FUNDAMENTAL_CFLAGS=''
TARGET_ROOTFS_CFLAGS=''
TARGET_FUNDAMENTAL_LDFLAGS=''
TARGET_TOOLCHAIN_TRIPLET=${REALNAME_BASE%-*}

BINARY=${PROGNAME##*-}

IFS=- read -r _ _ _ TOOLCHAIN_PLATFORM PROGNAME << EOF
$REALNAME_BASE
EOF

TOOLCHAIN_BIN_DIR="$REALNAME_DIR/"
export PATH="$TOOLCHAIN_BIN_DIR":$PATH
export GCC_HONOUR_COPTS

TOOLCHAIN_SYSROOT="$TOOLCHAIN_BIN_DIR/../.."
if [ ! -d "$TOOLCHAIN_SYSROOT" ]; then
    echo "Error: Unable to determine sysroot (looking for $TOOLCHAIN_SYSROOT)!" >&2
    exit 1
fi

case $TOOLCHAIN_PLATFORM in
    gnu|glibc|uclibc|musl)
        GCC_SYSROOT_FLAGS="--sysroot=$TOOLCHAIN_SYSROOT -Wl,-rpath=$TOOLCHAIN_SYSROOT/lib:$TOOLCHAIN_SYSROOT/usr/lib"
        LD_SYSROOT_FLAGS="-rpath=$TOOLCHAIN_SYSROOT/lib:$TOOLCHAIN_SYSROOT/usr/lib"
        ;;
    *)
        GCC_SYSROOT_FLAGS=""
        LD_SYSROOT_FLAGS=""
        ;;
esac

case $BINARY in
    cc|gcc|g++|c++|cpp)
        exec "$TARGET_TOOLCHAIN_TRIPLET-$BINARY.bin" $GCC_SYSROOT_FLAGS $TARGET_FUNDAMENTAL_CFLAGS $TARGET_ROOTFS_CFLAGS "$@"
        ;;
    ld)
        exec "$TARGET_TOOLCHAIN_TRIPLET-$BINARY.bin" $LD_SYSROOT_FLAGS $TARGET_FUNDAMENTAL_LDFLAGS "$@"
        ;;
    as)
        exec "$TARGET_TOOLCHAIN_TRIPLET-$BINARY.bin" $TARGET_FUNDAMENTAL_ASFLAGS "$@"
        ;;
    *)
        exec "$TARGET_TOOLCHAIN_TRIPLET-$BINARY.bin" "$@"
        ;;
esac

exit 0
